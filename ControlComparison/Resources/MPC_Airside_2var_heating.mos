//timestep,s
timestep=240*60;
//simulation duration,s
duration=14*3600+6*24*3600+3600;   //12*3600
steps=integer(duration/timestep);

//starttime base,s; Cooling week 17643600s (4901d-5060d); Shoulder week 13755600s (3821d-3980d); Heating week (77-236) week
startTime_base=277200; //startTime_base=17643600;     startTime_base=13755600;                         
endTime=startTime_base+duration;


//Initialize the state at the first time step (prepare dsfinal_0.txt)
importInitial("dsfinal_0.txt");

for i in 1:steps loop
  //Update the state for the optimization
  importInitial("dsfinal_"+String(i-1)+".txt");
  //Optimization
  ControlComparison.Optimization.Airside.GDL36OptimizationHeating(startTime=startTime_base+timestep*(i-1),
  stopTime=startTime_base+timestep*i);
  
  //Get the optimized parameters
  Lines=Modelica.Utilities.Streams.readFile("OptimizationBest.txt");
  TSuplin=Lines[4];
  TSupopt=Modelica.Utilities.Strings.scanReal(TSuplin);
  dpStalin=Lines[5];
  dpStaopt=Modelica.Utilities.Strings.scanReal(dpStalin);
  
  // Load initial values with dsfinal_1.txt values (state rollback)
  importInitial("dsfinal_"+String(i-1)+".txt");
  
  // Simulate the model and save the result
  simulateExtendedModel("ControlComparison.Testbeds.VAVReheat.Guideline36MPCHeating",initialNames={"conAHU.TSupSetOcc","conAHU.dpStaSet"},
  initialValues={TSupopt,dpStaopt},startTime=startTime_base+timestep*(i-1),stopTime=startTime_base+timestep*i, method="Cvode",
  tolerance=1e-6,resultFile = "dsres"+String(i));
  
  //simulateModel("ControlComparison.Testbeds.VAVReheat.Guideline36MPCHeating",startTime=startTime_base,stopTime=endTime,method="Cvode",tolerance=1e-6,resultFile = "dsresGDL36Hea");
  
  // Save the state
  system("copy dsfinal.txt dsfinal_"+String(i)+".txt");
end for;


//The outputs that need to be extracted
dataNames={"Time","conAHU.TSup","conAHU.TSupSet","sitEneTotInt.y","gasTotInt.y","eleTotInt.y","TAirTotDev.y","eleTot.u[1]","eleTot.u[2]","conAHU.dpStaSet","conAHU.ducStaPre",
"flo.temAirSou.T","flo.temAirEas.T","flo.temAirNor.T","flo.temAirWes.T"}

//dataNames_tmp=DymolaCommands.Trajectories.readTrajectoryNames("dsres1.mat");
dataSize_tmp=DymolaCommands.Trajectories.readTrajectorySize("dsres1.mat");
data_tmp=DymolaCommands.Trajectories.readTrajectory("dsres1.mat", dataNames, dataSize_tmp);

for j in 2:steps loop
  //dataNames=DymolaCommands.Trajectories.readTrajectoryNames("dsres"+String(j)+".mat");
  dataSize=DymolaCommands.Trajectories.readTrajectorySize("dsres"+String(j)+".mat");
  data=DymolaCommands.Trajectories.readTrajectory("dsres"+String(j)+".mat", dataNames, dataSize);
  data_tmp=[data_tmp,data];
  Modelica.Utilities.Streams.print("Finished data" + String(j));
end for;
  DymolaCommands.Trajectories.writeTrajectory("merge.mat", dataNames, transpose(data_tmp));